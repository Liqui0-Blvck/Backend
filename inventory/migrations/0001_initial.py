# Generated by Django 5.2.5 on 2025-08-07 03:02

import django.db.models.deletion
import django.utils.timezone
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalStockReservation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('cantidad_kg', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('cantidad_unidades', models.PositiveIntegerField(default=0, help_text='Cantidad de unidades reservadas (para productos que no son palta)')),
                ('cantidad_cajas', models.PositiveIntegerField(default=0)),
                ('nombre_cliente', models.CharField(blank=True, max_length=100, null=True)),
                ('rut_cliente', models.CharField(blank=True, max_length=20, null=True)),
                ('telefono_cliente', models.CharField(blank=True, max_length=20, null=True)),
                ('email_cliente', models.EmailField(blank=True, max_length=254, null=True)),
                ('estado', models.CharField(choices=[('en_proceso', 'En proceso'), ('confirmada', 'Confirmada'), ('cancelada', 'Cancelada'), ('expirada', 'Expirada')], default='en_proceso', max_length=16)),
                ('timeout_minutos', models.PositiveIntegerField(default=2)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical stock reservation',
                'verbose_name_plural': 'historical stock reservations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSupplier',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('nombre', models.CharField(max_length=100)),
                ('rut', models.CharField(db_index=True, max_length=20)),
                ('direccion', models.CharField(blank=True, max_length=200, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contacto', models.CharField(blank=True, max_length=100, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Supplier',
                'verbose_name_plural': 'historical Suppliers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSupplierPayment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('monto', models.DecimalField(decimal_places=2, help_text='Monto del pago realizado', max_digits=12)),
                ('fecha_pago', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha y hora en que se realizó el pago')),
                ('metodo_pago', models.CharField(choices=[('efectivo', 'Efectivo'), ('transferencia', 'Transferencia'), ('cheque', 'Cheque'), ('otro', 'Otro')], default='efectivo', help_text='Método utilizado para realizar el pago', max_length=20)),
                ('comprobante', models.TextField(blank=True, help_text='Archivo de comprobante de pago (opcional)', max_length=100, null=True)),
                ('notas', models.TextField(blank=True, help_text='Notas adicionales sobre el pago', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Supplier Payment',
                'verbose_name_plural': 'historical Supplier Payments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='MadurationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado_maduracion', models.CharField(choices=[('verde', 'Verde'), ('pre-maduro', 'Pre-maduro'), ('maduro', 'Maduro'), ('sobremaduro', 'Sobremaduro')], max_length=16)),
                ('fecha_cambio', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PalletType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('nombre', models.CharField(max_length=64)),
                ('peso_pallet', models.DecimalField(decimal_places=2, max_digits=7)),
                ('descripcion', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('marca', models.CharField(blank=True, max_length=50)),
                ('unidad', models.CharField(choices=[('caja', 'Caja'), ('unidad', 'Unidad'), ('kilogramo', 'Kilogramo')], default='caja', max_length=20)),
                ('tipo_producto', models.CharField(choices=[('palta', 'Palta'), ('otro', 'Otro')], default='palta', help_text='Tipo de producto: palta o otro', max_length=10)),
                ('activo', models.BooleanField(default=True)),
                ('image_path', models.ImageField(blank=True, null=True, upload_to='product_images')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReceptionDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('variedad', models.CharField(blank=True, max_length=50, null=True)),
                ('calibre', models.CharField(blank=True, max_length=20, null=True)),
                ('numero_pallet', models.CharField(help_text='Identificador único del pallet/lote', max_length=20)),
                ('cantidad_cajas', models.PositiveIntegerField()),
                ('peso_bruto', models.DecimalField(decimal_places=2, help_text='Peso bruto en kg', max_digits=8)),
                ('peso_tara', models.DecimalField(decimal_places=2, default=0, help_text='Peso de embalaje/tara en kg', max_digits=8)),
                ('calidad', models.PositiveSmallIntegerField(choices=[(5, 'Excelente'), (4, 'Buena'), (3, 'Regular'), (2, 'Deficiente'), (1, 'Mala')], default=3)),
                ('temperatura', models.DecimalField(blank=True, decimal_places=1, help_text='Temperatura en °C al momento de recepción', max_digits=4, null=True)),
                ('estado_maduracion', models.CharField(blank=True, max_length=50, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('costo', models.DecimalField(decimal_places=2, default=0, help_text='Costo por caja o unidad', max_digits=10)),
                ('porcentaje_perdida_estimado', models.DecimalField(decimal_places=2, default=0, help_text='Porcentaje estimado de pérdida para este lote', max_digits=5)),
            ],
            options={
                'verbose_name': 'Reception Detail',
                'verbose_name_plural': 'Reception Details',
            },
        ),
        migrations.CreateModel(
            name='ReceptionImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('imagen', models.ImageField(upload_to='recepciones/')),
                ('descripcion', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Reception Image',
                'verbose_name_plural': 'Reception Images',
            },
        ),
        migrations.CreateModel(
            name='StockReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('cantidad_kg', models.DecimalField(decimal_places=2, default=0, max_digits=7)),
                ('cantidad_unidades', models.PositiveIntegerField(default=0, help_text='Cantidad de unidades reservadas (para productos que no son palta)')),
                ('cantidad_cajas', models.PositiveIntegerField(default=0)),
                ('nombre_cliente', models.CharField(blank=True, max_length=100, null=True)),
                ('rut_cliente', models.CharField(blank=True, max_length=20, null=True)),
                ('telefono_cliente', models.CharField(blank=True, max_length=20, null=True)),
                ('email_cliente', models.EmailField(blank=True, max_length=254, null=True)),
                ('estado', models.CharField(choices=[('en_proceso', 'En proceso'), ('confirmada', 'Confirmada'), ('cancelada', 'Cancelada'), ('expirada', 'Expirada')], default='en_proceso', max_length=16)),
                ('timeout_minutos', models.PositiveIntegerField(default=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('rut', models.CharField(max_length=20, unique=True)),
                ('direccion', models.CharField(blank=True, max_length=200, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contacto', models.CharField(blank=True, max_length=100, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
            },
        ),
        migrations.CreateModel(
            name='SupplierPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('monto', models.DecimalField(decimal_places=2, help_text='Monto del pago realizado', max_digits=12)),
                ('fecha_pago', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha y hora en que se realizó el pago')),
                ('metodo_pago', models.CharField(choices=[('efectivo', 'Efectivo'), ('transferencia', 'Transferencia'), ('cheque', 'Cheque'), ('otro', 'Otro')], default='efectivo', help_text='Método utilizado para realizar el pago', max_length=20)),
                ('comprobante', models.FileField(blank=True, help_text='Archivo de comprobante de pago (opcional)', null=True, upload_to='comprobantes_pago')),
                ('notas', models.TextField(blank=True, help_text='Notas adicionales sobre el pago', null=True)),
            ],
            options={
                'verbose_name': 'Supplier Payment',
                'verbose_name_plural': 'Supplier Payments',
                'ordering': ['-fecha_pago'],
            },
        ),
        migrations.CreateModel(
            name='BoxType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('nombre', models.CharField(max_length=64)),
                ('descripcion', models.TextField(blank=True)),
                ('peso_caja', models.DecimalField(decimal_places=2, max_digits=6)),
                ('peso_pallet', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business.business')),
            ],
        ),
        migrations.CreateModel(
            name='FruitLot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('marca', models.CharField(blank=True, max_length=50)),
                ('proveedor', models.CharField(max_length=64)),
                ('procedencia', models.CharField(max_length=64)),
                ('pais', models.CharField(max_length=32)),
                ('calibre', models.CharField(max_length=16)),
                ('cantidad_cajas', models.PositiveIntegerField()),
                ('cantidad_unidades', models.PositiveIntegerField(default=0, help_text='Cantidad total de unidades en el lote (para productos que no son palta)')),
                ('unidades_por_caja', models.PositiveIntegerField(default=0, help_text='Cantidad de unidades por caja (para productos que no son palta)')),
                ('unidades_reservadas', models.PositiveIntegerField(default=0, help_text='Cantidad de unidades reservadas (para productos que no son palta)')),
                ('peso_bruto', models.DecimalField(decimal_places=2, max_digits=8)),
                ('peso_neto', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('qr_code', models.CharField(max_length=128, unique=True)),
                ('fecha_ingreso', models.DateField(default=django.utils.timezone.now)),
                ('estado_maduracion', models.CharField(choices=[('verde', 'Verde'), ('pre-maduro', 'Pre-maduro'), ('maduro', 'Maduro'), ('sobremaduro', 'Sobremaduro')], default='verde', max_length=16)),
                ('fecha_maduracion', models.DateField(blank=True, null=True)),
                ('porcentaje_perdida_estimado', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('costo_inicial', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('costo_diario_almacenaje', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('precio_sugerido_min', models.DecimalField(blank=True, decimal_places=2, help_text='Precio mínimo sugerido por kg o unidad', max_digits=7, null=True)),
                ('precio_sugerido_max', models.DecimalField(blank=True, decimal_places=2, help_text='Precio máximo sugerido por kg o unidad', max_digits=7, null=True)),
                ('estado_lote', models.CharField(choices=[('activo', 'Con cajas disponibles'), ('agotado', 'Sin cajas disponibles'), ('cajas_recuperadas', 'Cajas vacías recuperadas')], default='activo', max_length=20)),
                ('box_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.boxtype')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business.business')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsReception',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('numero_guia', models.CharField(blank=True, help_text='Número de guía interna', max_length=50, null=True, unique=True)),
                ('fecha_recepcion', models.DateTimeField(auto_now_add=True)),
                ('numero_guia_proveedor', models.CharField(blank=True, help_text='Número de guía o factura del proveedor', max_length=50, null=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente de revisión'), ('revisado', 'Revisado'), ('aprobado', 'Aprobado'), ('rechazado', 'Rechazado parcial/total')], default='pendiente', max_length=20)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('monto_total', models.DecimalField(decimal_places=2, default=0, help_text='Monto total de la recepción', max_digits=12)),
                ('total_pallets', models.PositiveIntegerField(default=0)),
                ('total_cajas', models.PositiveIntegerField(default=0)),
                ('total_peso_bruto', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business.business')),
                ('recibido_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recepciones_recibidas', to=settings.AUTH_USER_MODEL)),
                ('revisado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='recepciones_revisadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Goods Reception',
                'verbose_name_plural': 'Goods Receptions',
                'ordering': ['-fecha_recepcion'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalFruitLot',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('marca', models.CharField(blank=True, max_length=50)),
                ('proveedor', models.CharField(max_length=64)),
                ('procedencia', models.CharField(max_length=64)),
                ('pais', models.CharField(max_length=32)),
                ('calibre', models.CharField(max_length=16)),
                ('cantidad_cajas', models.PositiveIntegerField()),
                ('cantidad_unidades', models.PositiveIntegerField(default=0, help_text='Cantidad total de unidades en el lote (para productos que no son palta)')),
                ('unidades_por_caja', models.PositiveIntegerField(default=0, help_text='Cantidad de unidades por caja (para productos que no son palta)')),
                ('unidades_reservadas', models.PositiveIntegerField(default=0, help_text='Cantidad de unidades reservadas (para productos que no son palta)')),
                ('peso_bruto', models.DecimalField(decimal_places=2, max_digits=8)),
                ('peso_neto', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('qr_code', models.CharField(db_index=True, max_length=128)),
                ('fecha_ingreso', models.DateField(default=django.utils.timezone.now)),
                ('estado_maduracion', models.CharField(choices=[('verde', 'Verde'), ('pre-maduro', 'Pre-maduro'), ('maduro', 'Maduro'), ('sobremaduro', 'Sobremaduro')], default='verde', max_length=16)),
                ('fecha_maduracion', models.DateField(blank=True, null=True)),
                ('porcentaje_perdida_estimado', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('costo_inicial', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('costo_diario_almacenaje', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('precio_sugerido_min', models.DecimalField(blank=True, decimal_places=2, help_text='Precio mínimo sugerido por kg o unidad', max_digits=7, null=True)),
                ('precio_sugerido_max', models.DecimalField(blank=True, decimal_places=2, help_text='Precio máximo sugerido por kg o unidad', max_digits=7, null=True)),
                ('estado_lote', models.CharField(choices=[('activo', 'Con cajas disponibles'), ('agotado', 'Sin cajas disponibles'), ('cajas_recuperadas', 'Cajas vacías recuperadas')], default='activo', max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('box_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.boxtype')),
                ('business', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='business.business')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical fruit lot',
                'verbose_name_plural': 'historical fruit lots',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGoodsReception',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('numero_guia', models.CharField(blank=True, db_index=True, help_text='Número de guía interna', max_length=50, null=True)),
                ('fecha_recepcion', models.DateTimeField(blank=True, editable=False)),
                ('numero_guia_proveedor', models.CharField(blank=True, help_text='Número de guía o factura del proveedor', max_length=50, null=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente de revisión'), ('revisado', 'Revisado'), ('aprobado', 'Aprobado'), ('rechazado', 'Rechazado parcial/total')], default='pendiente', max_length=20)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('monto_total', models.DecimalField(decimal_places=2, default=0, help_text='Monto total de la recepción', max_digits=12)),
                ('total_pallets', models.PositiveIntegerField(default=0)),
                ('total_cajas', models.PositiveIntegerField(default=0)),
                ('total_peso_bruto', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('business', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='business.business')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('recibido_por', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('revisado_por', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Goods Reception',
                'verbose_name_plural': 'historical Goods Receptions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProduct',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('nombre', models.CharField(max_length=100)),
                ('marca', models.CharField(blank=True, max_length=50)),
                ('unidad', models.CharField(choices=[('caja', 'Caja'), ('unidad', 'Unidad'), ('kilogramo', 'Kilogramo')], default='caja', max_length=20)),
                ('tipo_producto', models.CharField(choices=[('palta', 'Palta'), ('otro', 'Otro')], default='palta', help_text='Tipo de producto: palta o otro', max_length=10)),
                ('activo', models.BooleanField(default=True)),
                ('image_path', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('business', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='business.business')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical product',
                'verbose_name_plural': 'historical products',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReceptionDetail',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('variedad', models.CharField(blank=True, max_length=50, null=True)),
                ('calibre', models.CharField(blank=True, max_length=20, null=True)),
                ('numero_pallet', models.CharField(help_text='Identificador único del pallet/lote', max_length=20)),
                ('cantidad_cajas', models.PositiveIntegerField()),
                ('peso_bruto', models.DecimalField(decimal_places=2, help_text='Peso bruto en kg', max_digits=8)),
                ('peso_tara', models.DecimalField(decimal_places=2, default=0, help_text='Peso de embalaje/tara en kg', max_digits=8)),
                ('calidad', models.PositiveSmallIntegerField(choices=[(5, 'Excelente'), (4, 'Buena'), (3, 'Regular'), (2, 'Deficiente'), (1, 'Mala')], default=3)),
                ('temperatura', models.DecimalField(blank=True, decimal_places=1, help_text='Temperatura en °C al momento de recepción', max_digits=4, null=True)),
                ('estado_maduracion', models.CharField(blank=True, max_length=50, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('costo', models.DecimalField(decimal_places=2, default=0, help_text='Costo por caja o unidad', max_digits=10)),
                ('porcentaje_perdida_estimado', models.DecimalField(decimal_places=2, default=0, help_text='Porcentaje estimado de pérdida para este lote', max_digits=5)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('box_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.boxtype')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lote_creado', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.fruitlot')),
                ('recepcion', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.goodsreception')),
            ],
            options={
                'verbose_name': 'historical Reception Detail',
                'verbose_name_plural': 'historical Reception Details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]

version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${P_POSTGRES_DB:-fruitpos_prod}
      POSTGRES_USER: ${P_POSTGRES_USER:-fruitpos_prod_user}
      POSTGRES_PASSWORD: ${P_POSTGRES_PASSWORD}
    ports:
      - "${P_POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    # Configuración optimizada para producción
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  redis:
    image: redis:6-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_prod_data:/data
    # Configuración optimizada para producción
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru

  api:
    build: .
    restart: always
    # Usar el entrypoint que maneja migraciones y collectstatic
    command: ["/app/docker-entrypoint.sh"]
    volumes:
      # Solo logs para producción (no montar código fuente)
      - ./logs:/app/logs
      # Certificados SSL si es necesario
      - ./ssl:/app/ssl:ro
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    environment:
      # Configuración básica de Django
      DJANGO_SETTINGS_MODULE: backend.settings
      
      # Base de datos (producción con prefijo P_)
      P_POSTGRES_DB: ${P_POSTGRES_DB:-fruitpos_prod}
      P_POSTGRES_USER: ${P_POSTGRES_USER:-fruitpos_prod_user}
      P_POSTGRES_PASSWORD: ${P_POSTGRES_PASSWORD}
      P_POSTGRES_HOST: ${P_POSTGRES_HOST:-db}
      P_POSTGRES_PORT: ${P_POSTGRES_PORT:-5432}
      
      # Redis (producción)
      P_REDIS_URL: ${P_REDIS_URL:-redis://redis:6379/0}
      
      # DigitalOcean Spaces (OBLIGATORIO en producción) - VALORES REALES DEL USUARIO
      P_USE_SPACES: ${P_USE_SPACES:-True}
      P_SPACES_ACCESS_KEY_ID: ${P_SPACES_ACCESS_KEY_ID}
      P_SPACES_SECRET_ACCESS_KEY: ${P_SPACES_SECRET_ACCESS_KEY}
      P_SPACES_BUCKET_NAME: ${P_SPACES_BUCKET_NAME:-fruitpost}
      P_SPACES_ENDPOINT_URL: ${P_SPACES_ENDPOINT_URL:-https://sfo3.digitaloceanspaces.com}
      P_SPACES_REGION: ${P_SPACES_REGION:-sfo3}
      P_SPACES_CDN_DOMAIN: ${P_SPACES_CDN_DOMAIN:-fruitpost.sfo3.cdn.digitaloceanspaces.com}
      
      # CORS para producción
      P_CORS_ALLOWED_ORIGINS: ${P_CORS_ALLOWED_ORIGINS:-https://fruitpos.cl,https://www.fruitpos.cl}
      
      # Configuración de seguridad
      P_SECURE_SSL_REDIRECT: ${P_SECURE_SSL_REDIRECT:-True}
      
      # Email para producción
      P_EMAIL_BACKEND: ${P_EMAIL_BACKEND:-django.core.mail.backends.smtp.EmailBackend}
      P_EMAIL_HOST: ${P_EMAIL_HOST:-smtp.gmail.com}
      P_EMAIL_PORT: ${P_EMAIL_PORT:-587}
      P_EMAIL_USE_TLS: ${P_EMAIL_USE_TLS:-True}
      P_EMAIL_HOST_USER: ${P_EMAIL_HOST_USER}
      P_EMAIL_HOST_PASSWORD: ${P_EMAIL_HOST_PASSWORD}
      P_DEFAULT_FROM_EMAIL: ${P_DEFAULT_FROM_EMAIL:-noreply@fruitpos.cl}
      
      # Logging para producción
      P_LOG_FILE: ${P_LOG_FILE:-/app/logs/django.log}
      P_DJANGO_LOG_LEVEL: ${P_DJANGO_LOG_LEVEL:-WARNING}
      
      # Debug SIEMPRE False en producción
      DEBUG: "False"
      
      # Clave secreta (OBLIGATORIO cambiar en producción)
      SECRET_KEY: ${SECRET_KEY}
      
      # Hosts permitidos
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-fruitpos.cl,www.fruitpos.cl,api.fruitpos.cl}

  nginx:
    image: nginx:1.25-alpine
    restart: always
    ports:
      - "80:80"        # Puerto HTTP (redirige a HTTPS)
      - "443:443"      # Puerto HTTPS
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # Certificados SSL
      # NO montar static/media porque se sirven desde DigitalOcean Spaces
    depends_on:
      - api
    environment:
      - NGINX_HOST=fruitpos.cl
      - NGINX_PORT=443
    # Configuración de salud para nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Servicio opcional para collectstatic inicial
  collectstatic:
    build: .
    command: ["python", "manage.py", "collectstatic", "--noinput"]
    volumes:
      - ./logs:/app/logs
    environment:
      # Mismas variables que api para acceder a Spaces
      DJANGO_SETTINGS_MODULE: backend.settings
      P_POSTGRES_DB: ${P_POSTGRES_DB:-fruitpos_prod}
      P_POSTGRES_USER: ${P_POSTGRES_USER:-fruitpos_prod_user}
      P_POSTGRES_PASSWORD: ${P_POSTGRES_PASSWORD}
      P_POSTGRES_HOST: ${P_POSTGRES_HOST:-db}
      P_POSTGRES_PORT: ${P_POSTGRES_PORT:-5432}
      P_USE_SPACES: ${P_USE_SPACES:-True}
      P_SPACES_ACCESS_KEY_ID: ${P_SPACES_ACCESS_KEY_ID}
      P_SPACES_SECRET_ACCESS_KEY: ${P_SPACES_SECRET_ACCESS_KEY}
      P_SPACES_BUCKET_NAME: ${P_SPACES_BUCKET_NAME:-fruitpost}
      P_SPACES_ENDPOINT_URL: ${P_SPACES_ENDPOINT_URL:-https://sfo3.digitaloceanspaces.com}
      P_SPACES_REGION: ${P_SPACES_REGION:-sfo3}
      P_SPACES_CDN_DOMAIN: ${P_SPACES_CDN_DOMAIN}
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: "False"
    depends_on:
      - db
    profiles:
      - tools  # Solo ejecutar manualmente con --profile tools

volumes:
  postgres_prod_data:
    driver: local
  redis_prod_data:
    driver: local

# Configuración de red para producción
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

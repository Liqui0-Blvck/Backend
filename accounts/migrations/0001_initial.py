# Generated by Django 5.2.5 on 2025-08-07 03:02

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracionUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notificaciones', models.BooleanField(default=True)),
                ('privacidad', models.BooleanField(default=True)),
                ('estilo_aplicacion', models.CharField(choices=[('dark', 'Dark'), ('light', 'Light')], default='light', max_length=20)),
                ('color_aplicacion', models.CharField(choices=[('inherit', 'Inherit'), ('current', 'Current'), ('transparent', 'Transparent'), ('black', 'Black'), ('white', 'White'), ('zinc', 'Zinc'), ('red', 'Red'), ('darkred', 'Dark Red'), ('tomato', 'Tomato'), ('salmon', 'Salmon'), ('orange', 'Orange'), ('gold', 'Gold'), ('yellow', 'Yellow'), ('lime', 'Lime'), ('green', 'Green'), ('darkgreen', 'Dark Green'), ('turquoise', 'Turquoise'), ('cyan', 'Cyan'), ('skyblue', 'Sky Blue'), ('blue', 'Blue'), ('navy', 'Navy'), ('indigo', 'Indigo'), ('purple', 'Purple'), ('magenta', 'Magenta'), ('pink', 'Pink'), ('crimson', 'Crimson'), ('amber', 'Ambar'), ('emerald', 'Esmeralda'), ('violet', 'Violeta')], default='white', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='phone number')),
                ('rut', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='tax ID')),
            ],
            options={
                'verbose_name': 'profile',
                'verbose_name_plural': 'profiles',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('second_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='second name')),
                ('last_name', models.CharField(max_length=30, verbose_name='last name')),
                ('second_last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='second last name')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
